"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Result = void 0;
var util = require('util');
var chalk = require('chalk');
var format = require('string-format');
var Result = /** @class */ (function () {
    function Result() {
        this.pass_count = 0;
        this.fail_count = 0;
        this.total_count = 0;
        this.fail_tests = [];
    }
    Result.prototype.markExecuting = function (tc) {
        console.log(chalk.hex('#454545')(util.format("\n[INFO][%s] Executing: %s, %s", tc.line, tc.command, tc.arguments)));
    };
    Result.prototype.markPass = function (tc) {
        if (!tc.is_setup) {
            this.pass_count++;
        }
        if (tc) {
            console.log(chalk.green("[PASS][" + tc.line + "] TEST PASS :)"));
        }
    };
    Result.prototype.markFail = function (tc, msg) {
        if (!tc.is_setup) {
            this.fail_count++;
        }
        if (tc && msg) {
            console.log(chalk.red("[FAIL][" + tc.line + "] Test case failed: " + JSON.stringify(tc) + ", msg: " + msg));
        }
        tc.error_msg = msg === null || msg === void 0 ? void 0 : msg.slice(0, 300); // just take 300 char
        this.fail_tests.push(tc);
    };
    Result.prototype.printResult = function () {
        var result = util.format("\n\n\
        =======================================================\n\
                                SUMMARY                        \n\
        =======================================================\n\
        Pass Count: %s\n\
        Fail Count: %s\n\
        Total TC: %s\n\
        Pass Percentage: %s\%\n\
        =======================================================\
        ", this.pass_count, this.fail_count, this.pass_count + this.fail_count, (this.pass_count * 100 / (this.pass_count + this.fail_count)));
        if (this.fail_count == 0) {
            console.log(chalk.green(result));
        }
        else {
            console.log(chalk.red(result));
        }
        if (this.fail_tests.length > 0) {
            console.log(chalk.red("\n=====================================================\n   YOU HAVE FAILED TEST! FIX PLEASE BEFORE CHECK IN\n=====================================================            \n" + this.fail_tests.map(function (x) { return JSON.stringify(x); }).join('\n') + "\n====================================================="));
        }
    };
    return Result;
}());
exports.Result = Result;
//# sourceMappingURL=result.js.map